services:
  caddy-ca:
    container_name: caddy-ca
    restart: unless-stopped
    build:
      context: .
      dockerfile: ./Dockerfile
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile:ro,Z
      - ./site:/srv:Z
      - ./caddy_data:/data:z
      - ./caddy_config:/config:Z
    expose:
      - "2019" # Internal admin API (no need to publish)
      - "9000" # Internal admin API (no need to publish)
      - "80" # Internal admin API (no need to publish)
      - "443" # Internal admin API (no need to publish)
    networks:
      - caddy_network
    healthcheck:
      # Generate the certificate, which will be used by the consumer (caddy-leaf)
      test: ["CMD", "test", "-f", "/data/caddy/pki/authorities/local/root.crt"]
      interval: 2s
      timeout: 1s
      retries: 10
      start_period: 100s


  caddy-leaf:
    depends_on:
      caddy-ca:
        condition: service_healthy
    networks:
      caddy_network:
        aliases:
          - leaf.local
    build:
      context: .
      dockerfile: ./caddy-leaf/Dockerfile
    container_name: caddy-leaf
    restart: unless-stopped
    volumes:
      - ./caddy-leaf/Caddyfile:/etc/caddy/Caddyfile:ro,Z
      - ./caddy-leaf/site:/srv:Z
      - ./caddy-leaf/caddy_data:/data:Z
      - ./caddy-leaf/caddy_config:/config:Z
      - ./caddy_data/caddy/pki/authorities/local/root.crt:/etc/caddy/root.crt:ro,z
    ports:
      - "8000:443" # HTTPS leaf exposed
    expose:
      - "80"
      - "443"
    environment:
      - CADDY_INSECURE_ACME=1
      - CADDY_INSECURE_TLS=1

networks:
    caddy_network:
      driver: bridge
